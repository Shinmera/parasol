#|
 This file is a part of Parasol
 (c) 2014 TymoonNET/NexT http://tymoon.eu (shinmera@tymoon.eu)
 Author: Nicolas Hafner <shinmera@tymoon.eu>
|#

(in-package #:parasol)
(named-readtables:in-readtable :qt)

(defclass curve-dialog-canvas ()
  ((%curve :initform NIL :accessor curve))
  (:metaclass qt-class)
  (:qt-superclass "QWidget")
  (:override ("paintEvent" paint-event)))

(defmethod initialize-instance :after ((widget curve-dialog-canvas) &key)
  (new widget)
  (#_setMinimumSize widget 500 300)
  (#_setStyleSheet widget "background-color:white;")
  (#_setAutoFillBackground widget T))

(defclass curve-dialog ()
  ((%picker :accessor picker)
   (%canvas :accessor canvas)
   (%distance :accessor distance)
   (%button-ok :accessor button-ok)
   (%button-cancel :accessor button-cancel))
  (:metaclass qt-class)
  (:qt-superclass "QDialog")
  (:slots ("selectCurve(const QString)" select-curve)
          ("selectDistance(double)" select-distance)
          ("ok()" ok)
          ("cancel()" cancel)))

(defmethod initialize-instance :after ((dialog curve-dialog) &key)
  (new dialog)
  (#_setWindowTitle dialog "Curve Settings - Parasol")
  (let ((layout (#_new QGridLayout))
        (picker (#_new QComboBox))
        (canvas (make-instance 'curve-dialog-canvas))
        (distance (#_new QDoubleSpinBox))
        (button-ok (#_new QPushButton "Ok"))
        (button-cancel (#_new QPushButton "Cancel")))
    (setf (picker dialog) picker
          (canvas dialog) canvas
          (distance dialog) distance
          (button-ok dialog) button-ok
          (button-cancel dialog) button-cancel)
    (#_setValue distance 2.0)
    (#_setMinimum distance 0.1)
    (#_setMaximum distance 200)
    (#_addItem picker "spline")
    (#_addItem picker "linear") ;; Automate at some point.
    (#_addWidget layout picker 0 0 1 3)
    (#_addWidget layout distance 0 3 1 1)
    (#_addWidget layout canvas 1 0 1 4)
    (#_addWidget layout button-ok 2 0 1 2)
    (#_addWidget layout button-cancel 2 2 1 2)
    (#_setLayout dialog layout)
    (#_setSizeConstraint (#_layout dialog) (#_QLayout::SetFixedSize))
    (connect picker "currentIndexChanged(const QString)" dialog "selectCurve(const QString)")
    (connect distance "valueChanged(double)" dialog "selectDistance(double)")
    (connect button-ok "clicked()" dialog "ok()")
    (connect button-cancel "clicked()" dialog "cancel()")
    (select-curve dialog "spline")))

(defmethod select-curve ((dialog curve-dialog) name)
  (let ((class-name (find-symbol (string-upcase name) "PARASOL")))
    (when class-name
      (let ((curve (make-curve class-name)))
        (format T "NEW CURVE: ~a~%" curve)
        (setf (point-distance curve) (#_value (distance dialog)))
        (record-point curve 20  150 0 0 0)
        (record-point curve 100 220 0 0 0.5)
        (record-point curve 200  50 0 0 1.0)
        (record-point curve 300 180 0 0 0.75)
        (record-point curve 450 200 0 0 0.5)
        (record-point curve 480  70 0 0 0)
        (setf (curve (canvas dialog)) curve)
        (#_update (canvas dialog))))))

(defmethod select-distance ((dialog curve-dialog) distance)
  (setf (point-distance (curve (canvas dialog))) distance)
  (#_update (canvas dialog)))

(defmethod paint-event ((canvas curve-dialog-canvas) event)
  (when (curve canvas)
    (with-objects ((painter (#_new QPainter canvas))
                   (black (#_new QColor 0 0 0))
                   (red (#_new QColor 255 0 0))
                   (brush (#_new QBrush black)))
      (#_setRenderHint painter (#_QPainter::Antialiasing))
      (#_setRenderHint painter (#_QPainter::HighQualityAntialiasing))      
      (#_eraseRect painter (#_rect canvas))
      (#_setBrush painter brush)
      (#_setStyle (#_pen painter) (#_Qt::NoPen))
      (map-points (curve canvas)
                  #'(lambda (x y xt yt p)
                      (declare (ignore xt yt))
                      (let ((len (* p 10)))
                        (with-objects ((point (#_new QPointF x y)))
                          (#_drawEllipse painter point len len)))))
      (#_setColor (#_brush painter) red)
      (let ((data (data (curve canvas))))
        (loop for i from 0 below (length (aref data 0))
              do (with-objects ((point (#_new QPointF (aref (aref data 0) i) (aref (aref data 1) i))))
                   (#_drawEllipse painter point 2 2))))
      (#_end painter))))

(defmethod ok ((dialog curve-dialog))
  (setf *curve-type* (class-name (class-of (curve (canvas dialog)))))
  (#_close dialog))

(defmethod cancel ((dialog curve-dialog))
  (#_close dialog))

(defmethod finalize ((canvas curve-dialog-canvas))
  (finalize (curve canvas)))

(defmethod finalize ((dialog curve-dialog))
  (finalize (canvas dialog))
  (maybe-delete-qobject (distance dialog))
  (maybe-delete-qobject (picker dialog))
  (maybe-delete-qobject (canvas dialog))
  (maybe-delete-qobject (button-ok dialog))
  (maybe-delete-qobject (button-cancel dialog)))
